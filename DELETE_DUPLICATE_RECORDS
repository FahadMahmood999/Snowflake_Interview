---------------
Using Rownumber approach didn't work in snowflake ---


create or replace table test6(col1 number,col2 number,COL3 NUMBER, primary key (COL1) );
insert into test6 values (100,1,3);
insert into test6 values (200,2,5);
insert into test6 values (300,7,9);
insert into test6 values (300,7,9);
insert into test6 values (100,1,3);
insert into test6 values (200,2,5);

SELECT * FROM TEST6;

SELECT * FROM 
(
  SELECT COL1,COL2,COL3,ROW_NUMBER() OVER(PARTITION BY COL1 ORDER BY COL1,COL2,COL3) AS RN FROM TEST6)
 A
WHERE RN=1;


delete from 
(
select COL1,ROW_NUMBER() OVER(PARTITION BY COL1 ORDER BY COL2,COL3) AS RN FROM TEST6
)t 
where t.RN>1;

with cte as (
select COL1,ROW_NUMBER() OVER(PARTITION BY COL1 ORDER BY 1) AS RN FROM TEST6)
delete from cte where cte.RN>1;



-------------------------------------Below approached work in snowflake ------------------------
create or replace table test6(col1 number,col2 number,COL3 NUMBER, primary key (COL1) );
insert into test6 values (100,1,3);
insert into test6 values (200,2,5);
insert into test6 values (300,7,9);
insert into test6 values (300,7,9);
insert into test6 values (100,1,3);
insert into test6 values (200,2,5);






create or replace transient table duplicate_holder as (
    select COL1,COL2,COL3
    from TEST6
    group by 1,2,3
    having count(*)>1
);
SELECT * FROM duplicate_holder;


begin transaction;

-- delete duplicates
delete from TEST6 a
using duplicate_holder b
where (a.COL1,a.COL2,a.COL3)=(b.COL1,b.COL2,b.COL3);

-- insert single copy
insert into TEST6
select * 
from duplicate_holder;

-- we are done
commit;
SELECT * FROM TEST6;
